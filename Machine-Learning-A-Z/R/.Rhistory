Sys.which("make")
install.packages('caTools')
library(caTools)
library(caTools)
# Load Data
dataset = read.csv('Data.csv')
# Fix Missing Data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
# Encode Categorical Data
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
# Split into Test & Training sets
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
setwd("C:/Users/Joel/Projects/Continued-Learning/Machine-Learning-A-Z/R/Data-Preprocessing")
library(caTools)
# Load Data
dataset = read.csv('Data.csv')
# Fix Missing Data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
# Encode Categorical Data
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
# Split into Test & Training sets
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
View(training_set)
View(training_set)
View(training_set)
View(training_set)
setwd("C:/Users/Joel/Projects/Continued-Learning/Machine-Learning-A-Z/R/Regression/Simple-Linear-Regression")
split = sample.split(dataset$Salary, SplitRatio = 2/3)
test_set[,2:3] = scale(test_set)
# Feature Scaling
# runs on all rows and on columns 2 - 3
training_set[,2:3] = scale(training_set)
# Pre-process Data
dataset = read.csv('Salary_Data.csv')
# Split into Test & Training Sets
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
library(caTools)
# Pre-process Data
dataset = read.csv('Salary_Data.csv')
# Split into Test & Training Sets
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# runs on all rows and on columns 2 - 3
training_set[,2:3] = scale(training_set)
test_set[,2:3] = scale(test_set)
?lm
library(caTools)
# Pre-process Data
dataset = read.csv('Salary_Data.csv')
#dataset = dataset[, 2:3]
# Split into Test & Training Sets
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# runs on all rows and on columns 2 - 3
#training_set[,2:3] = scale(training_set)
#test_set[,2:3] = scale(test_set)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
View(regressor)
summary(regressor)
library(caTools)
# Pre-process Data
dataset = read.csv('Salary_Data.csv')
#dataset = dataset[, 2:3]
# Split into Test & Training Sets
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# runs on all rows and on columns 2 - 3
#training_set[,2:3] = scale(training_set)
#test_set[,2:3] = scale(test_set)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
y_test_pred = predict(regressor, newdata = test_set)
y_train_pred = predict(regressor, newdata = training_set)
y_test_pred
install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = y_train_pred),
color = 'blue')
y vs Experience (Training)') +
xlab('Years of Experience') +
ylab('Salary')
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = y_train_pred),
color = 'blue') +
ggtitle('Salary vs Experience (Training)') +
xlab('Years of Experience') +
ylab('Salary')
library(caTools)
library(ggplot2)
# Pre-process Data
dataset = read.csv('Salary_Data.csv')
#dataset = dataset[, 2:3]
# Split into Test & Training Sets
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# runs on all rows and on columns 2 - 3
#training_set[,2:3] = scale(training_set)
#test_set[,2:3] = scale(test_set)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
y_test_pred = predict(regressor, newdata = test_set)
y_train_pred = predict(regressor, newdata = training_set)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = y_train_pred),
color = 'blue') +
ggtitle('Salary vs Experience (Training)') +
xlab('Years of Experience') +
ylab('Salary')
library(caTools)
library(ggplot2)
# Pre-process Data
dataset = read.csv('Salary_Data.csv')
#dataset = dataset[, 2:3]
# Split into Test & Training Sets
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# runs on all rows and on columns 2 - 3
#training_set[,2:3] = scale(training_set)
#test_set[,2:3] = scale(test_set)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
y_test_pred = predict(regressor, newdata = test_set)
y_train_pred = predict(regressor, newdata = training_set)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = y_train_pred),
color = 'blue') +
ggtitle('Salary vs Experience (Training)') +
xlab('Years of Experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = y_train_pred),
color = 'blue') +
ggtitle('Salary vs Experience (Training)') +
xlab('Years of Experience') +
ylab('Salary')
